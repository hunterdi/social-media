receivers:
  otlp:
    protocols:
      grpc:
        include_metadata: true
      http:
        include_metadata: true
        cors:
          allowed_origins:
            - http://*
            - https://*
          allowed_headers:
            - '*'
  zipkin:
  jaeger:
    protocols:
      grpc:
      thrift_binary:
      thrift_compact:
      thrift_http:
  prometheus:
    config:
      scrape_configs:
      - job_name: 'collector'
        scrape_interval: 10s
        static_configs:
        - targets: ['collector:8888']
        - targets: ['collector:8889']

processors:
  batch:
  # attributes:
  #   actions:
  #     - key: seq
  #       action: delete # remove sensitive element

exporters:
  jaeger:
    endpoint: jaeger-all-in-one:14250
    tls:
      insecure: true
  zipkin:
    endpoint: "http://zipkin-all-in-one:9411/api/v2/spans"
  prometheus:
    endpoint: "0.0.0.0:9464" # this is weird because the exporter is actually an endpoint that must be scraped
  logging:
    loglevel: debug

extensions:
  health_check:
  pprof:
  zpages:

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp, jaeger, zipkin]
      exporters: [zipkin, logging]
      processors: [batch]

    metrics:
      receivers: [otlp, prometheus]
      exporters: [prometheus, logging]
      processors: [batch]
    # logs:
    #     receivers: [otlp]
    #     processors: [batch]
    #     exporters: [zipkin]
